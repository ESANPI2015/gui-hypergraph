#ifndef _HYPEREDGE_VIEWER_HPP
#define _HYPEREDGE_VIEWER_HPP

#include <QWidget>
#include <QGraphicsView>
#include <QMap>

// Generated by MOC
namespace Ui
{
    class HyperedgeViewer;
}

// Forward decls
class QGraphicsScene;
class QGraphicsView;

class Hyperedge;
class HyperedgeItem;

class HyperedgeScene : public QGraphicsScene
{
    Q_OBJECT

    public:
        HyperedgeScene(QObject * parent = 0);
        ~HyperedgeScene();

        void visualize(Hyperedge *root = NULL);

    private:
        QMap<Hyperedge*, QPointF> currentLayout;
        QMap<Hyperedge*, HyperedgeItem*> currentItems;
};

class ForceBasedScene : public HyperedgeScene
{
    Q_OBJECT

    public:
        ForceBasedScene(QObject * parent = 0);
        ~ForceBasedScene();

        //bool isEnabled();
        //void setEnabled(bool enable);
        //void setEquilibriumDistance(qreal k);

    private slots:
        // Cycles through all items of a scene and updates the positions of hyperedgeitems according to their neighbours
        void updateLayout();

    private:
        QTimer *mpTimer;
        qreal mEquilibriumDistance;
};

class HyperedgeView : public QGraphicsView
{
    Q_OBJECT

    public:
        HyperedgeView(QWidget *parent = 0);
        HyperedgeView (HyperedgeScene * scene, QWidget * parent = 0 );

    //signals:
        // Signal which is emitted if hyperedge x points to hyperedge y
        //void edgeAdded(Hyperedge* x, Hyperedge* y);

    protected:
        /// qt mouse wheel spin callback
        void wheelEvent(QWheelEvent *event);
        /// scales scene (zooms into or out of the scene)
        void scaleView(qreal scaleFactor);

        // Mouse press and release event to move view and select things
        void mousePressEvent(QMouseEvent*);
        void mouseMoveEvent(QMouseEvent*);
        void mouseReleaseEvent(QMouseEvent*);

        // Keyboard event to
        // a) delete edges (Del)
        void keyPressEvent(QKeyEvent * event);

    private:
        // DRAW_LINE mode
        bool isDrawLineMode;
        HyperedgeItem* sourceItem;
        QGraphicsLineItem *lineItem;

        // SELECT_OBJECT mode
        HyperedgeItem* selectedItem;
};

class HyperedgeViewer : public QWidget
{
    Q_OBJECT

    public:
        HyperedgeViewer(QWidget *parent = 0);
        ~HyperedgeViewer();

    private:
        Ui::HyperedgeViewer* mpUi;

        ForceBasedScene* mpScene;
        HyperedgeView* mpView;
};

#endif

